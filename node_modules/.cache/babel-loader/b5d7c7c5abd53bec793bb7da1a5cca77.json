{"ast":null,"code":"var _jsxFileName = \"/Users/Joseph/Master/Programming/FlightSchool/src/view/page/Team.js\";\n// imports\nimport React from 'react';\nimport Navbar from '../components/Navbar';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport User from '../components/User'; // Material UI imports\n\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Modal from '@material-ui/core/Modal'; // css\n\nimport '../css/Home.css';\nconst styles = {\n  button: {\n    margin: '40px auto 0px auto',\n    position: 'relative'\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    border: '2px solid #000',\n    backgroundColor: 'black'\n  }\n};\n\nclass Team extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      users: null,\n      open: false\n    };\n\n    this.joinTeam = event => {\n      console.log('join team'); // TODO: should pop up a modal to ask what the team name is\n\n      this.setState({\n        open: true\n      });\n    };\n\n    this.createTeam = event => {\n      console.log('create team'); // TODO: should pop up a modal to ask what to call the new team\n    };\n\n    this.teamOptions = this.teamOptions.bind(this);\n    this.joinTeam = this.joinTeam.bind(this);\n    this.createTeam = this.createTeam.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  componentDidMount() {\n    // get all users on the same team and then store in state\n    axios.get('/user/teammates').then(res => {\n      this.setState({\n        users: res.data\n      });\n      console.log(this.state.users);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const classes = this.props.classes; // load teammates, if not ask to join or create a team\n\n    let users = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Loading ... \");\n    if (this.state.users && this.state.users.length) users = this.state.users.map(user => React.createElement(User, {\n      user: user,\n      key: user.userID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));else if (this.state.users && !this.state.length) users = this.teamOptions();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 8,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, users), React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Content...\")))), React.createElement(Modal, {\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"simple-modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Text in a modal\"), React.createElement(\"p\", {\n      id: \"simple-modal-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"))));\n  } // give user the option to create a team or join a team\n\n\n  teamOptions() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.joinTeam,\n      className: classes.button,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Join a team\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.createTeam,\n      className: classes.button,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Create a team\"));\n  } // join a team\n\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  getModalStyle() {\n    const top = 25;\n    return {\n      top: `${top}%`,\n      margin: 'auto'\n    };\n  }\n\n}\n\nexport default withStyles(styles)(Team);","map":{"version":3,"sources":["/Users/Joseph/Master/Programming/FlightSchool/src/view/page/Team.js"],"names":["React","Navbar","Grid","axios","User","Button","withStyles","Modal","styles","button","margin","position","paper","width","border","backgroundColor","Team","Component","constructor","state","users","open","joinTeam","event","console","log","setState","createTeam","teamOptions","bind","handleClose","componentDidMount","get","then","res","data","catch","err","render","classes","props","length","map","user","userID","getModalStyle","top"],"mappings":";AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CAEA;;AACA,OAAO,iBAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE,oBADJ;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADG;AAKXC,EAAAA,KAAK,EAAE;AACHD,IAAAA,QAAQ,EAAE,UADP;AAEHE,IAAAA,KAAK,EAAE,GAFJ;AAGHC,IAAAA,MAAM,EAAE,gBAHL;AAIHC,IAAAA,eAAe,EAAE;AAJd;AALI,CAAf;;AAaA,MAAMC,IAAN,SAAmBhB,KAAK,CAACiB,SAAzB,CAAmC;AAO/BC,EAAAA,WAAW,GAAG;AACV;AADU,SALdC,KAKc,GALN;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,IAAI,EAAE;AAFF,KAKM;;AAAA,SA4EdC,QA5Ec,GA4EFC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADkB,CAGlB;;AACA,WAAKC,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAE;AADI,OAAd;AAGH,KAnFa;;AAAA,SAsFdM,UAtFc,GAsFAJ,KAAD,IAAW;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EADoB,CAGpB;AACH,KA1Fa;;AAEV,SAAKG,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKP,QAAL,GAAgB,KAAKA,QAAL,CAAcO,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKF,UAAL,GAAkB,KAAKA,UAAL,CAAgBE,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB;AACA5B,IAAAA,KAAK,CAAC6B,GAAN,CAAU,iBAAV,EAA6BC,IAA7B,CAAkCC,GAAG,IAAI;AACrC,WAAKR,QAAL,CAAc;AACVN,QAAAA,KAAK,EAAEc,GAAG,CAACC;AADD,OAAd;AAGAX,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,KAAvB;AACH,KALD,EAKGgB,KALH,CAKSC,GAAG,IAAI;AACZb,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACH,KAPD;AAQH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACGC,OADH,GACe,KAAKC,KADpB,CACGD,OADH,EAGL;;AACA,QAAInB,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAZ;AACA,QAAG,KAAKD,KAAL,CAAWC,KAAX,IAAoB,KAAKD,KAAL,CAAWC,KAAX,CAAiBqB,MAAxC,EAAgDrB,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBsB,GAAjB,CAAqBC,IAAI,IAAI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,GAAG,EAAEA,IAAI,CAACC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CAAR,CAAhD,KACK,IAAG,KAAKzB,KAAL,CAAWC,KAAX,IAAoB,CAAC,KAAKD,KAAL,CAAWsB,MAAnC,EAA2CrB,KAAK,GAAG,KAAKQ,WAAL,EAAR;AAEhD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,KADL,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAJJ,CADA,CAFJ,EAaI,oBAAC,KAAD;AACI,yBAAgB,oBADpB;AAEI,0BAAiB,0BAFrB;AAGI,MAAA,IAAI,EAAG,KAAKD,KAAL,CAAWE,IAHtB;AAII,MAAA,OAAO,EAAG,KAAKS,WAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAK,MAAA,SAAS,EAAES,OAAO,CAAC3B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,EAAE,EAAC,oBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAG,MAAA,EAAE,EAAC,0BAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAFJ,CANJ,CAbJ,CADJ;AA6BH,GAhE8B,CAkE/B;;;AACAgB,EAAAA,WAAW,GAAG;AAAA,UACFW,OADE,GACU,KAAKC,KADf,CACFD,OADE;AAGV,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,KAAKjB,QAA1D;AAAoE,MAAA,SAAS,EAAEiB,OAAO,CAAC9B,MAAvF;AAA+F,MAAA,SAAS,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAII,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAA8C,MAAA,OAAO,EAAE,KAAKkB,UAA5D;AAAwE,MAAA,SAAS,EAAEY,OAAO,CAAC9B,MAA3F;AAAmG,MAAA,SAAS,MAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,CADJ;AAUH,GAhF8B,CAkF/B;;;AAiBAqB,EAAAA,WAAW,GAAG;AACV,SAAKJ,QAAL,CAAc;AACVL,MAAAA,IAAI,EAAE;AADI,KAAd;AAGH;;AAEDwB,EAAAA,aAAa,GAAG;AACZ,UAAMC,GAAG,GAAG,EAAZ;AACA,WAAO;AACHA,MAAAA,GAAG,EAAG,GAAEA,GAAI,GADT;AAEHpC,MAAAA,MAAM,EAAC;AAFJ,KAAP;AAIH;;AA/G8B;;AAkHnC,eAAeJ,UAAU,CAACE,MAAD,CAAV,CAAmBQ,IAAnB,CAAf","sourcesContent":["\n// imports\nimport React from 'react'\nimport Navbar from '../components/Navbar';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport User from '../components/User';\n\n// Material UI imports\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Modal from '@material-ui/core/Modal';\n\n// css\nimport '../css/Home.css';\n\nconst styles = {\n    button: {\n        margin: '40px auto 0px auto',\n        position: 'relative'\n    },\n    paper: {\n        position: 'absolute',\n        width: 400,\n        border: '2px solid #000',\n        backgroundColor: 'black'\n    },\n}\n\nclass Team extends React.Component {\n\n    state = {\n        users: null,\n        open: false\n    } \n\n    constructor() {\n        super();\n        this.teamOptions = this.teamOptions.bind(this);\n        this.joinTeam = this.joinTeam.bind(this);\n        this.createTeam = this.createTeam.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    componentDidMount() {\n        // get all users on the same team and then store in state\n        axios.get('/user/teammates').then(res => {\n            this.setState({\n                users: res.data\n            });\n            console.log(this.state.users)\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        // load teammates, if not ask to join or create a team\n        let users = <p>Loading ... </p>\n        if(this.state.users && this.state.users.length) users = this.state.users.map(user => <User user={user} key={user.userID}/>);\n        else if(this.state.users && !this.state.length) users = this.teamOptions();\n\n        return (\n            <div>\n                <Navbar />\n                <div className='container'>\n                <Grid container spacing={10}>\n                    <Grid item sm={8} xs={12}>\n                        {users}\n                    </Grid>\n                    <Grid item sm={4} xs={12}>\n                        <p>Content...</p>\n                    </Grid>\n                </Grid>\n                </div>\n\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={ this.state.open }\n                    onClose={ this.handleClose }\n                >\n                    <div className={classes.paper}>\n                        <h2 id=\"simple-modal-title\">Text in a modal</h2>\n                        <p id=\"simple-modal-description\">\n                            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n                        </p>\n                    </div>\n                </Modal>\n            </div>\n        )\n    }\n\n    // give user the option to create a team or join a team\n    teamOptions() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Button variant='contained' color='primary' onClick={this.joinTeam} className={classes.button} fullWidth>\n                    Join a team\n                </Button>\n                <Button variant='contained' color='secondary' onClick={this.createTeam} className={classes.button} fullWidth>\n                    Create a team\n                </Button>\n            </div>\n        )\n    }\n\n    // join a team\n    joinTeam = (event) => {\n        console.log('join team');\n\n        // TODO: should pop up a modal to ask what the team name is\n        this.setState({\n            open: true\n        });\n    }\n\n    // create a team\n    createTeam = (event) => {\n        console.log('create team');\n\n        // TODO: should pop up a modal to ask what to call the new team\n    }\n\n    handleClose() {\n        this.setState({\n            open: false\n        });\n    }\n\n    getModalStyle() {\n        const top = 25;\n        return {\n            top: `${top}%`,\n            margin:'auto'\n        };\n    }\n}\n\nexport default withStyles(styles)(Team)"]},"metadata":{},"sourceType":"module"}