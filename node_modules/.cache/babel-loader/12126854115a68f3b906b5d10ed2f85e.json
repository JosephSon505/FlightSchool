{"ast":null,"code":"var _jsxFileName = \"/Users/Joseph/Master/Programming/FlightSchool/src/view/page/Signin.js\";\nimport React from 'react'; // import { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\n\nimport PropTypes from 'prop-types'; // Material UI Imports\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // redux imports\n\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../redux/actions/userActions'; // Axios Import\n// import axios from 'axios';\n// CSS imports\n\nimport '../css/App.css';\nconst styles = {\n  form: {\n    textAlign: 'center'\n  },\n  pageTitle: {\n    margin: '20px auto 20px auto'\n  },\n  textField: {\n    margin: '20px auto 20px auto'\n  },\n  button: {\n    margin: '40px auto 0px auto',\n    position: 'relative'\n  },\n  customError: {\n    color: 'red',\n    fontSize: '0.8rem',\n    marginTop: '20'\n  },\n  progress: {\n    position: 'absolute'\n  }\n};\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      }; // login via redux\n\n      this.props.loginUser(userData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSignUp = event => {\n      this.props.history.push('/signup');\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {},\n      emailError: '',\n      passwordError: ''\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          loading = _this$props.UI.loading;\n    const _this$state = this.state,\n          errors = _this$state.errors,\n          emailError = _this$state.emailError,\n          passwordError = _this$state.passwordError;\n    return React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h2\",\n      className: classes.pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Flight School\"), React.createElement(Typography, {\n      variant: \"h4\",\n      className: classes.pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      variant: \"outlined\",\n      className: classes.textField,\n      helperText: emailError,\n      error: emailError ? true : false,\n      value: this.state.email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      variant: \"outlined\",\n      className: classes.textField,\n      helperText: passwordError,\n      error: passwordError ? true : false,\n      value: this.state.password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), errors.general && React.createElement(Typography, {\n      variant: \"body2\",\n      className: classes.customError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, errors.general), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      fullWidth: true,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Log In\", loading && React.createElement(CircularProgress, {\n      size: 26,\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.handleSignUp,\n      className: classes.button,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Sign Up\"))), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n}\n\nSignIn.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  loginUser\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(SignIn));","map":{"version":3,"sources":["/Users/Joseph/Master/Programming/FlightSchool/src/view/page/Signin.js"],"names":["React","PropTypes","withStyles","Grid","Typography","TextField","Button","CircularProgress","connect","loginUser","styles","form","textAlign","pageTitle","margin","textField","button","position","customError","color","fontSize","marginTop","progress","SignIn","Component","constructor","handleSubmit","event","preventDefault","userData","email","state","password","props","history","handleChange","setState","target","name","value","handleSignUp","push","errors","emailError","passwordError","render","classes","loading","UI","general","componentWillReceiveProps","nextProps","propTypes","object","isRequired","func","user","mapStateToProps","mapActionsToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,iCAA1B,C,CAEA;AACA;AAEA;;AACA,OAAO,gBAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE;AADT,GADK;AAIXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,MAAM,EAAE;AADD,GAJA;AAOXC,EAAAA,SAAS,EAAE;AACPD,IAAAA,MAAM,EAAE;AADD,GAPA;AAUXE,EAAAA,MAAM,EAAE;AACJF,IAAAA,MAAM,EAAE,oBADJ;AAEJG,IAAAA,QAAQ,EAAE;AAFN,GAVG;AAcXC,EAAAA,WAAW,EAAE;AACTC,IAAAA,KAAK,EAAE,KADE;AAETC,IAAAA,QAAQ,EAAE,QAFD;AAGTC,IAAAA,SAAS,EAAE;AAHF,GAdF;AAmBXC,EAAAA,QAAQ,EAAE;AACNL,IAAAA,QAAQ,EAAE;AADJ;AAnBC,CAAf;;AAwBA,MAAMM,MAAN,SAAqBvB,KAAK,CAACwB,SAA3B,CAAqC;AAEjCC,EAAAA,WAAW,GAAG;AACV;;AADU,SAiFdC,YAjFc,GAiFEC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,QAAQ,GAAG;AACbC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADL;AAEbE,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAFR,OAAjB,CAFsB,CAOtB;;AACA,WAAKC,KAAL,CAAWxB,SAAX,CAAqBoB,QAArB,EAA+B,KAAKI,KAAL,CAAWC,OAA1C;AACH,KA1Fa;;AAAA,SA4FdC,YA5Fc,GA4FER,KAAD,IAAW;AACtB,WAAKS,QAAL,CAAc;AACV,SAACT,KAAK,CAACU,MAAN,CAAaC,IAAd,GAAqBX,KAAK,CAACU,MAAN,CAAaE;AADxB,OAAd;AAGH,KAhGa;;AAAA,SAkGdC,YAlGc,GAkGEb,KAAD,IAAW;AACtB,WAAKM,KAAL,CAAWC,OAAX,CAAmBO,IAAnB,CAAwB,SAAxB;AACH,KApGa;;AAEV,SAAKV,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE,EADE;AAETE,MAAAA,QAAQ,EAAE,EAFD;AAGTU,MAAAA,MAAM,EAAE,EAHC;AAITC,MAAAA,UAAU,EAAE,EAJH;AAKTC,MAAAA,aAAa,EAAE;AALN,KAAb;AAOH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACgC,KAAKZ,KADrC;AAAA,UACGa,OADH,eACGA,OADH;AAAA,UACkBC,OADlB,eACYC,EADZ,CACkBD,OADlB;AAAA,wBAEyC,KAAKhB,KAF9C;AAAA,UAEGW,MAFH,eAEGA,MAFH;AAAA,UAEWC,UAFX,eAEWA,UAFX;AAAA,UAEuBC,aAFvB,eAEuBA,aAFvB;AAIL,WACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEE,OAAO,CAACnC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAEmC,OAAO,CAACjC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAII,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAEiC,OAAO,CAACjC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAOI;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAE,KAAKa,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAC,OADP;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAC,OAJV;AAKI,MAAA,OAAO,EAAC,UALZ;AAMI,MAAA,SAAS,EAAEoB,OAAO,CAAC/B,SANvB;AAOI,MAAA,UAAU,EAAE4B,UAPhB;AAQI,MAAA,KAAK,EAAEA,UAAU,GAAG,IAAH,GAAU,KAR/B;AASI,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWD,KATtB;AAUI,MAAA,QAAQ,EAAE,KAAKK,YAVnB;AAWI,MAAA,SAAS,MAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAcI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAC,UADP;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,KAAK,EAAC,UAJV;AAKI,MAAA,OAAO,EAAC,UALZ;AAMI,MAAA,SAAS,EAAEW,OAAO,CAAC/B,SANvB;AAOI,MAAA,UAAU,EAAE6B,aAPhB;AAQI,MAAA,KAAK,EAAEA,aAAa,GAAG,IAAH,GAAU,KARlC;AASI,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,QATtB;AAUI,MAAA,QAAQ,EAAE,KAAKG,YAVnB;AAWI,MAAA,SAAS,MAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,EA2BKO,MAAM,CAACO,OAAP,IACG,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,SAAS,EAAEH,OAAO,CAAC5B,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKwB,MAAM,CAACO,OADZ,CA5BR,EAgCI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAqB,MAAA,OAAO,EAAC,WAA7B;AAAyC,MAAA,KAAK,EAAC,SAA/C;AAAyD,MAAA,SAAS,EAAEH,OAAO,CAAC9B,MAA5E;AAAoF,MAAA,SAAS,MAA7F;AAA8F,MAAA,QAAQ,EAAE+B,OAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEKA,OAAO,IACJ,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,EAAxB;AAA4B,MAAA,SAAS,EAAED,OAAO,CAACxB,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,CAhCJ,EAsCI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAA8C,MAAA,OAAO,EAAE,KAAKkB,YAA5D;AAA0E,MAAA,SAAS,EAAEM,OAAO,CAAC9B,MAA7F;AAAqG,MAAA,SAAS,MAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtCJ,CAPJ,CAFJ,EAoDI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApDJ,CADJ;AAwDH;;AAEDkC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAGA,SAAS,CAACH,EAAV,CAAaN,MAAhB,EAAwB;AACpB,WAAKN,QAAL,CAAc;AACVM,QAAAA,MAAM,EAAES,SAAS,CAACH,EAAV,CAAaN;AADX,OAAd;AAGH;AACJ;;AAjFgC;;AAyGrCnB,MAAM,CAAC6B,SAAP,GAAmB;AACfN,EAAAA,OAAO,EAAE7C,SAAS,CAACoD,MAAV,CAAiBC,UADX;AAEf7C,EAAAA,SAAS,EAAER,SAAS,CAACsD,IAAV,CAAeD,UAFX;AAGfE,EAAAA,IAAI,EAAEvD,SAAS,CAACoD,MAAV,CAAiBC,UAHR;AAIfN,EAAAA,EAAE,EAAE/C,SAAS,CAACoD,MAAV,CAAiBC;AAJN,CAAnB;;AAOA,MAAMG,eAAe,GAAI1B,KAAD,KAAY;AAChCyB,EAAAA,IAAI,EAAEzB,KAAK,CAACyB,IADoB;AAEhCR,EAAAA,EAAE,EAAEjB,KAAK,CAACiB;AAFsB,CAAZ,CAAxB;;AAKA,MAAMU,iBAAiB,GAAG;AACtBjD,EAAAA;AADsB,CAA1B;AAKA,eAAeD,OAAO,CAACiD,eAAD,EAAkBC,iBAAlB,CAAP,CAA4CxD,UAAU,CAACQ,MAAD,CAAV,CAAmBa,MAAnB,CAA5C,CAAf","sourcesContent":["import React from 'react'\n// import { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\n// Material UI Imports\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../redux/actions/userActions';\n\n// Axios Import\n// import axios from 'axios';\n\n// CSS imports\nimport '../css/App.css'\n\nconst styles = {\n    form: {\n        textAlign: 'center'\n    },\n    pageTitle: {\n        margin: '20px auto 20px auto'\n    },\n    textField: {\n        margin: '20px auto 20px auto'\n    },\n    button: {\n        margin: '40px auto 0px auto',\n        position: 'relative'\n    },\n    customError: {\n        color: 'red',\n        fontSize: '0.8rem', \n        marginTop: '20'\n    },\n    progress: {\n        position: 'absolute',\n    }\n};\n\nclass SignIn extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            errors: {},\n            emailError: '',\n            passwordError: ''\n        };\n    }\n\n    render() {\n        const { classes, UI: { loading } } = this.props;\n        const { errors, emailError, passwordError } = this.state;\n\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\n                        Flight School\n                    </Typography>\n                    <Typography variant=\"h4\" className={classes.pageTitle}>\n                        Log In\n                    </Typography>\n                    <form noValidate onSubmit={this.handleSubmit} >\n                        <TextField \n                            id='email' \n                            name='email' \n                            type='email' \n                            label='Email'\n                            variant='outlined' \n                            className={classes.textField} \n                            helperText={emailError}\n                            error={emailError ? true : false}\n                            value={this.state.email} \n                            onChange={this.handleChange} \n                            fullWidth\n                        />\n                        <TextField \n                            id='password' \n                            name='password' \n                            type='password' \n                            label='Password'\n                            variant='outlined'  \n                            className={classes.textField} \n                            helperText={passwordError}\n                            error={passwordError ? true : false}\n                            value={this.state.password} \n                            onChange={this.handleChange} \n                            fullWidth\n                        />\n                        {errors.general && (\n                            <Typography variant='body2' className={classes.customError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n                        <Button type='submit'variant='contained' color='primary' className={classes.button} fullWidth disabled={loading}>\n                            Log In\n                            {loading && (\n                                <CircularProgress size={26} className={classes.progress} />\n                            )}\n                        </Button>\n                        <Button variant='contained' color='secondary' onClick={this.handleSignUp} className={classes.button} fullWidth>\n                            Sign Up\n                        </Button>\n                    </form>\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        );\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.UI.errors) {\n            this.setState({\n                errors: nextProps.UI.errors\n            });\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        // login via redux\n        this.props.loginUser(userData, this.props.history);        \n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleSignUp = (event) => {\n        this.props.history.push('/signup');\n    }\n}\n\nSignIn.propTypes = {\n    classes: PropTypes.object.isRequired,\n    loginUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n});\n\nconst mapActionsToProps = {\n    loginUser\n}\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(SignIn));"]},"metadata":{},"sourceType":"module"}